[{"C:\\Users\\cityp\\Proyectos\\mern-docker\\client\\src\\App.js":"1"},{"size":965,"mtime":1651730801304,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"54fmxx","C:\\Users\\cityp\\Proyectos\\mern-docker\\client\\src\\App.js",["6","7","8"],{"ruleId":"9","severity":1,"message":"10","line":3,"column":8,"nodeType":"11","messageId":"12","endLine":3,"endColumn":12},{"ruleId":"13","severity":1,"message":"14","line":9,"column":3,"nodeType":"11","endLine":9,"endColumn":12,"suggestions":"15"},{"ruleId":"13","severity":1,"message":"16","line":9,"column":13,"nodeType":"17","endLine":13,"endColumn":4},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["18"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",{"desc":"19","fix":"20"},"Add dependencies array: []",{"range":"21","text":"22"},[309,309],", []"]